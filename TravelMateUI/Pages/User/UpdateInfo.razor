@page "/updateprofile"
@using TravelMate.Models
@using TravelMate2.Services
@inject ICustomAuthenticationStateProvider authStateProvider
@inject UserInfoService userInfoService
@inject IUserUIService userUIService
@inject NavigationManager NavigationManager



@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <!-- Edit Profile Form -->
    <div class="container mt-5">
        <div class="profile-edit-container">
            <h2 class="text-center"><i class="fas fa-user-edit"></i> Edit Your Profile</h2>
            <EditForm Model="@user" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="username" class="form-label">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="user.Username" placeholder="Enter your username" />
                </div>

                <div class="mb-3">
                    <label for="email" class="form-label">Email</label>
                    <InputText id="email" class="form-control" @bind-Value="user.Email" placeholder="Enter your email" />
                </div>

                <div class="mb-3">
                    <label for="phoneNumber" class="form-label">Phone Number</label>
                    <InputText id="phoneNumber" class="form-control" @bind-Value="user.PhoneNumber" placeholder="Enter your phone number" />
                </div>

                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <InputText id="name" class="form-control" @bind-Value="user.Name" placeholder="Enter your full name" />
                </div>

                <div class="mb-3">
                    <label for="address" class="form-label">Address</label>
                    <InputText id="address" class="form-control" @bind-Value="user.Address" placeholder="Enter your address" />
                </div>

                <div class="mb-3">
                    <label for="nationality"><i class="fas fa-globe"></i> Select Nationality:</label>
                    <InputSelect id="nationality" class="form-control" @bind-Value="user.Nationality">
                        <option value="">Select Nationality</option>
                        @foreach (var type in Enum.GetValues(typeof(Nationality)))
                        {
                            <option value="@type">@type</option>
                        }
                    </InputSelect>
                </div>

                <div class="text-center">
                    <button type="submit" class="btn btn-primary w-100" py-5>
                        <i class="fas fa-save"></i> Save Changes
                    </button>
                </div>
            </EditForm>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3">@errorMessage</div>
            }
        </div>
    </div>
}

@code {
    private User user;
    private string? errorMessage;


    protected override async Task OnInitializedAsync()
    {
        await authStateProvider.GetAuthenticationStateAsync();
        user = userInfoService._currentUser;
    }

    private async Task HandleSubmit()
    {
        try
        {

            // Call the UpdateUser method
            await userUIService.UpdateUser(userInfoService._currentUser.UserId, userInfoService._currentUser);
            // Navigate to the hotel-owner-home page after a successful update
            NavigationManager.NavigateTo("/hotel-owner-home");
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

}
