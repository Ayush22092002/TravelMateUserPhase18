@page "/viewprofile"
@using TravelMate.Models
@using TravelMate2.Services
@inject ICustomAuthenticationStateProvider authStateProvider
@inject UserInfoService userInfoService

<style>
    .profile-img {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        background-color: #007bff; /* Background color */
        color: white; /* Text color */
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        font-weight: bold;
        text-transform: uppercase;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

@if (user == null)
{
    <div class="d-flex justify-content-center mt-5">
        <div class="spinner-border text-primary" role="status">
            <span class="sr-only">Loading...</span>
        </div>
    </div>
}
else
{
    <div class="card shadow-sm mt-5 mx-auto" style="max-width: 700px;">
        <div class="card-body text-center">
            @*  <div class="profile-img mb-4">
        @user.Username.Substring(0, 1)
        </div>
        *@
            <h3 class="card-title mb-4">@user.Username</h3>

            <div class="text-left">
                <p class="card-text"><i class="fas fa-user"></i> <strong>Name:</strong> @user.Name</p>
                <p class="card-text"><i class="fas fa-envelope"></i> <strong>Email:</strong> @user.Email</p>
                <p class="card-text"><i class="fas fa-phone"></i> <strong>Phone Number:</strong> @user.PhoneNumber</p>
                <p class="card-text"><i class="fas fa-map-marker-alt"></i> <strong>Address:</strong> @user.Address</p>
                <p class="card-text"><i class="fas fa-flag"></i> <strong>Nationality:</strong> @user.Nationality</p>
            </div>

            <a href="/updateprofile" class="btn btn-primary mt-4">
                <i class="fas fa-edit"></i> Edit Profile
            </a>
        </div>
    </div>
}

@code {
    private User user;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await authStateProvider.GetAuthenticationStateAsync();
            user = userInfoService._currentUser;

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error retrieving data: {ex.Message}");
        }
    }
}