@page "/viewprofile"
@using TravelMate.Models
@using TravelMate2.Services
@inject ICustomAuthenticationStateProvider authStateProvider
@inject UserInfoService userInfoService

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">




@if (user == null)
{
    <p>Loading...</p>
}
else
{
    <div class="card">
        <div class="card-body">

            <h5 class="card-title">@user.Username</h5>
            <p class="card-text"><strong>Name:</strong> @user.Name</p>
            <p class="card-text"><strong>Email:</strong> @user.Email</p>
            <p class="card-text"><strong>Phone Number:</strong> @user.PhoneNumber</p>
            <p class="card-text"><strong>Address:</strong> @user.Address</p>
            <p class="card-text"><strong>Nationality:</strong> @user.Nationality</p>
            <p class="card-text"><strong>Auth Provider:</strong> @user.AuthProvider</p>
            <p class="card-text"><strong>User Type:</strong> @user.UserType</p>
            <a href="/updateprofile" class="btn btn-primary">Edit Profile</a>
        </div>
    </div>
}

@code {
    private User user;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await authStateProvider.GetAuthenticationStateAsync();
            user = userInfoService._currentUser;

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error retrieving data: {ex.Message}");
        }
    }
}
